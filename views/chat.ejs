<!DOCTYPE html>
<html lang="kr">
<head>
    <meta charset="UTF-8">
    <mete name="viewport", content="width-device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/font/font-awesome/css/font-awesome.min.css">
    <script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
    <style>
        * {
            box-sizing: border-box;
        }
        body {
            background-color : rgba(12, 149, 12, 0.3);
            -ms-background-size: cover;
            -o-background-size: cover;
            -moz-background-size: cover;
            -webkit-background-size: cover;
            background-size: cover;
            opacity: 1;
        }
        .message {
            color : rgb(224, 142, 10)
        }
        a {
            text-decoration: none;
        } 
        a:hover {
            color: #99d33f;
        }
        a:link, a:active,  {
            color: black;
        }

        textarea {
            margin-top: 10px;
            overflow: auto;
        }
        .chat_layout {
            height: 750px;
        }
        
        .chatting {
            position: relative;
            margin: 0 auto;
            width: 700px;
            height: 1000px;
        }
        .view {
            border: 1px solid #a0d64b;
            padding: 50px;
            height: 800px;
            box-shadow: 2px 1px 7px;
            clear: both;
            overflow: auto;
            display: block;
        }
    
        nav {
            padding: 0.5
        }
        #menuBox {
            position: absolute;
            display: none;
        }
    
        .input .sub_function{
            margin-top: 45px;
            margin-right: 2px;
            float: left;
        }
        .input .text_submit{
            margin-top: 45px;
            float: right;
        }
        .text_input {
            min-width: 635px;
        }
        .you_content, .my_content {
            margin: 5px;
            padding-bottom: 7px;
        }
        .my_content {
            text-align: right;
        }
        .you_name, .my_name, .you_message .message, .my_message .message {
            display: inline-block;
        }
        .you_message .message, .my_message .message {
            min-width: 150px;
            max-width: 250px;
            text-align: left;
            padding: 7px;
            border: 5px solid #0aa00a;
            box-shadow: 1px 1px 1px;
            
        }
        .you_message .message {
             border-radius: 15px 15px 15px 1px;
        }
        .my_message .message {
             border-radius: 15px 15px 1px 15px;
        }
        .you_content .you_name, .my_content .my_name{
            margin-bottom: 5px;
        }
        
        .user_list, .function_list {
            border: 1px solid black;
            width: 100px;
        }
        
        .function_list {
            height: 7.5%;
        }
        .user_list {
            width: 100%;
            text-align: center;
            position: relative;
            display: block;
        }
        .list_title {
            border-bottom: 1px solid black;
        }
        .list_item {
            margin: 0;
            padding: 0;
            list-style: none;
            overflow: auto;
        }
        .receive_img {
            border-radius: 20px;
            border: 2.5px solid #0aa00a;
            box-shadow: 1px 1px 1px #0aa00a
        }
        .fileUploadView {
            display: inline-block;
        }
        .you_content .receive_img {
            
            float: left;
        }
        .object_send {
            display: inline-block;
        }
        .you_content .file_download {
            clear: both;
            
        }
        .typingText {
            padding : 2px 2px;
            visibility: visible;
        }
        .nickname {
            visibility: hidden;
        }
    </style>
</head>
<body>
    <div class="chat_layout">
        <div class="chatting">
           <nav>
                <i class="fa fa-bars fa-2x" id="slideMenu" aria-hidden="true"></i>
                <div id="menuBox">
                    <div class="user_list">
                    <div class="list_title">유저리스트</div>
                    <ul class="list_item"></ul>
                </div>
                </div>
           </nav>
            <div class="view">

            </div>
           
            <div class="typingText">
                <span class="nickname">경고창 및 타이핑 문</span>
            </div>
            <div class="fileUploadBox" style="display: none;">
            </div>
           
            <div class="input">
                <button id="plusMenu" class="sub_function" >+</button>
                <textarea id="inputMsg" class="text_input" style="height: 70px;" placeholder="텍스트를 입력해주십시오." onkeyup="checkEnter()" onkeydown="checkKeyboard()"></textarea>
                <span id="sendMsg" class="text_submit"   style="cursor: pointer">Enter</span>
            </div>
            <div class="function_list" style="display: none;">
                <span class="list_title">부가기능</span>
                <div class="sub_send">
                    <div>
                        <input type="file" id="img_file" multiple="multiple" accept=".gif, .jpg, .png" onchange="javascript:getPath(this);" style="display:none;">
                        <span id="img_send" class="object_send" onClick="sendFileBox('img_send')" style="cursor:pointer;">이미지 전송</span>
                    </div>
                    <div>
                       <input type="file" id="etc_file" multiple="multiple" onchange="javascript:getPath(this);" style="display:none;">
                        <span id="file_send" class="object_send" onClick="sendFileBox('file_send')" style="cursor:pointer;">파일 전송</span>
                    </div> 

                </div>
                
            </div>
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script type="text/javascript" src="../js/common.js"></script>
    <script type="text/javascript" src="../js/socket.io-stream.js"></script>
    <script type="text/javascript" src="../js/chatClient.js"></script>
    <script>
        var files;
        var fileInfo = {
            fileObj : [],
            origin_name : [],
            storage_name : [],
            type: [],
            size : []
        }
      
        var file_size = 0
        var blobStream
        $("#plusMenu").click(function () {
           $(".function_list").toggle(0.1, function() {
               var menuText = $("#plusMenu").text()
               if(menuText === "+") {
                    $("#plusMenu").text("- ")
               } else {
                    $("#plusMenu").text("+")
               }
           })
        })
        
        $(".object_send").click(function () {
            $(".function_list").css("display","none");
            $("#plusMenu").text("+")
        })
        $('.view').scrollTop($('.view').prop('scrollHeight'))
        

        var sendFileBox = function(selectId) {
            var tagId = "#"+selectId
            console.log($(tagId).prev().click())
        }
        
        var sendFile = function(selectId) {
            var tagId = "#"+selectId
            console.log(document.getElementById(selectId).value)
        }
        
          /*
        <div>
       <input type="file" id="etc_file" multiple="multiple" onchange="javascript:getPath(this);" style="display:none;">
        <span id="file_send" class="object_send" onClick="sendFileBox('file_send')" style="cursor:pointer;">파일 전송</span>
    </div> 
        */
        function getFileType(fileName) {
            var fileType 
            return fileType = fileName.split(".")[(fileName.split(".").length)-1];
        } 
        // getPath() 시작
        function getPath(obj) {
            obj.select();
            files = obj.files
            //
            for(var i=0; i<files.length; i++) {
                var fileType = getFileType(files[i].name)
                // file객체 지정
                fileInfo.fileObj[i] = files[i]
                // file 오리지널 이름 지정
                fileInfo.origin_name[i] = files[i].name
                console.log(files[i].name)
                // file 타입(확장자) 지정
                fileInfo.type[i] = fileType
                // file.Type 바꾸기/ 이유=> 다른파일들은 확장자(.xx)가 
                // 안나오는 문제 발생
                //console.log('type check', fileInfo.type[i])

                // 저장파일이름 지정: 어플이름_년도월일시분초밀리초
                fileInfo.storage_name[i] 
                    = isFormatfileDate(new Date())
                    +isRandomNumber()+"."+fileType
                    // type[i].split("/")[1] -> 지우기. 아예 이름만 놓고
                    // 파일 풀네임을 보거나 다운로드 받을때 합치는게 좋을듯.

                console.log("date setting: ", fileInfo.storage_name[i])
                // 파일 사이즈 지정
                fileInfo.size[i] = files[i].size
            } // files for문 끝
            
            // FileReader 객체는 IE 10부터 지원.. 단점!
            fileInfo.fileObj.forEach( function(value, index) {
                var fileOriginName = fileInfo.origin_name[index]
                var fileType = fileInfo.type[index]
                var fileStorage_name = fileInfo.storage_name[index]
                var fileSize = fileInfo.size[index]
                
                // FileReader() 익스 10 이하 적용 x 해결책 필요
                
                // 이미지를 전송했을때는 미리보기 지원해야 하므로 밑의 fReader사용
                // 파일을 전송할때는 대체이미지를 적용할 것이므로 공통적인 태그는 같이 묶기.
                var fReader = new FileReader()
                fReader.readAsDataURL(value);
                fReader.onloadend = function(event) {
                    var fileSrc = event.target.result;
                    var fileId = 'uploadFile_'+index
                    var fileNameId = "fileUploadName_"+index
                    var fileCancleId = 'cancleUpload_'+index
                    var fileTag = '<div class="fileUploadView">'
                        if(fileType == 'gif' || fileType == 'jpg' || fileType == 'png') {
                            fileTag += '<img src="'+fileSrc+'" alt="'+fileStorage_name+'"'
                            fileTag += ' id="'+fileId+'" width="25%">'
                        }
                        fileTag += '<div id="'+fileNameId+'"></div>'
                        fileTag += '<button class="cancleUpload">취소</button>'
                        fileTag += '</div>'
                    $(".fileUploadBox").append(fileTag)
                    $("#fileUploadName_"+index).text(fileOriginName)
                    console.log('name', fileOriginName)
                    $(".fileUploadBox").css("display", "block")   
                } 
            }) //  fileInfo.fileObj.forEach 끝
        } // getPath() 끝

        // fileUploadBox 취소버튼 살리기
        $(".fileUploadBox").on("click", ".cancleUpload", function() {
            var fileUploadView = $(this).parent();
            var imgTag = fileUploadView.children()[0];
            var storage_name = $(imgTag).attr("alt")
            fileInfo.storage_name.forEach( function(v, i) {
                if(v === storage_name) {
                    fileInfo.storage_name.splice(i,1);
                    console.log(fileInfo.storage_name)
                    if(!i) {
                        $(".fileUploadBox").css("display", "none")
                    } 
                    fileUploadView.remove(); 
                    return ;
                }
            })
        }) // fileUploadBox 취소버튼 살리기 끝
            
        // 사이드메뉴 마우스 오버 시, 나타나게하기
        $('#slideMenu').hover(function() {
           $('#menuBox').css('display', 'block') 
        }, function() {
            $('#menuBox').css('display', 'none') 
        }); // // 사이드메뉴 마우스 오버 시, 나타나게하기 끝
    </script>
</body>
</html>

